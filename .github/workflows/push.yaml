name: Integrate and Deploy Main
on:
  push:
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  checks:
    name: Changeset
    runs-on: ubuntu-latest
    outputs:
      changed-nextjs: ${{ steps.changed-nextjs.outputs.result }}
      changed-ingest: ${{ steps.changed-ingest.outputs.result }}
      changed-expo: ${{ steps.changed-expo.outputs.result }}
      changed-db: ${{ steps.changed-db.outputs.result }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Create Changeset
        id: changeset
        run: |
          content=`npm run --silent build -- --filter=...\[preview\] --dry-run=json`
          content="${content//$'\n'/''}"
          content="${content//$'\r'/''}"
          echo "result=$content" >> "$GITHUB_OUTPUT"

      - name: echo changeset
        run: echo "The changeset is ${{ steps.changeset.outputs.result }}"

      - name: Changed nextjs?
        id: changed-nextjs
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/nextjs') }}
        run: |
          echo "result=true" >> "$GITHUB_OUTPUT"

      - name: Changed ingest?
        id: changed-ingest
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/ingest') }}
        run: |
          echo "result=true" >> "$GITHUB_OUTPUT"

      - name: Changed expo?
        id: changed-expo
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/expo') }}
        run: |
          echo "result=true" >> "$GITHUB_OUTPUT"

      - name: Changed db?
        id: changed-db
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/db') }}
        run: |
          echo "result=true" >> "$GITHUB_OUTPUT"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run lint

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run format:check

  deploy-infra:
    name: Update Infrastructure
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_PROD }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get GKR Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: probable-pitcher
          location: us-west1

      - name: Install dependencies
        run: cd infrastructure && npm ci

      - name: Update legacy stack
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: legacy
          work-dir: infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          CHANGED_INGEST: "true"
          CHANGED_NEXTJS: "true"
          CHANGED_DB: "true"

  # update-production-rn-app:
  #   name: Update Legacy App
  #   needs: deploy-infra
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3
  #
  #     - name: Run semver-diff
  #       id: semver-diff
  #       uses: tj-actions/semver-diff@v2.1.0
  #
  #     - name: Show release type
  #       run: |
  #         echo "Release type: ${{ steps.semver-diff.outputs.release_type }}"
  #
  #     - name: Check for EXPO_TOKEN
  #       run: |
  #         if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
  #           echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
  #           exit 1
  #         fi
  #
  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #         cache: "npm"
  #
  #     - name: Setup Expo
  #       uses: expo/expo-github-action@v7
  #       with:
  #         expo-version: latest
  #         eas-version: latest
  #         token: ${{ secrets.EXPO_TOKEN }}
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Publish Live Update
  #       run: cd apps/expo && APP_ENV=production NEXTAUTH_URL="https://probablepitcher.com" SENTRY_PUBLIC_DSN="${{ secrets.SENTRY_PUBLIC_DSN }}" eas update --branch production --message "${{ github.event.release.name }}"

  # tag-git:
  #   name: Preview Tag Git
  #   needs: [deploy-infra, update-legacy]
  #   if: always() &&
  #     (needs.deploy-infra.result == 'skipped' || needs.deploy-infra.result == 'success') &&
  #     (needs.update-legacy.result == 'skipped' || needs.update-legacy.result == 'success')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Check out repository code"
  #       uses: actions/checkout@v3
  #
  #     - name: "Push preview tag"
  #       uses: EndBug/latest-tag@latest
  #       with:
  #         ref: preview
