name: Push Staging
on:
  push:
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REF_FILTER: ${{ github.event.before }}

jobs:
  checks:
    name: Check Changeset
    runs-on: ubuntu-latest
    outputs:
      changed-nextjs: ${{ steps.changed-nextjs.outputs.result }}
      changed-ingest: ${{ steps.changed-ingest.outputs.result }}
      changed-expo: ${{ steps.changed-expo.outputs.result }}

    steps:
      - name: Creat Changeset
        id: changeset
        run: |
          context=`npm run build --filter=$TURBO_RUN_FILTER --dry-run=json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=result::$content"

      - name: Changed nextjs?
        id: changed-nextjs
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/nextjs') }}
        run: |
          echo "::set-output name=result::true"

      - name: Changed ingest?
        id: changed-ingest
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/ingest') }}
        run: |
          echo "::set-output name=result::true"

      - name: Changed expo?
        id: changed-expo
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, '@probable/expo') }}
        run: |
          echo "::set-output name=result::true"

  test:
    name: Automated Testing
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  build-nextjs:
    name: Build nextjs image
    needs: [test,changeset]
    runs-on: ubuntu-latest
    if: ${{ needs.checks.outputs.changed-nextjs }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and publish nextjs image
        run: |
          docker build . --file apps/nextjs/Dockerfile --tag ghcr.io/tmlamb/probable-pitchers-nextjs:sha-${{ github.sha }} --tag ghcr.io/tmlamb/probable-pitchers-nextjs:latest
          docker push --all-tags ghcr.io/tmlamb/probable-pitchers-nextjs

  build-ingest:
    name: Build ingest image
    needs: [test,changeset]
    runs-on: ubuntu-latest
    if: ${{ needs.checks.outputs.changed-ingest }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: Build and publish ingest image
        run: |
          docker build . --file apps/ingest/Dockerfile --tag ghcr.io/tmlamb/probable-pitchers-ingest:sha-${{ github.sha }} --tag ghcr.io/tmlamb/probable-pitchers-ingest:latest
          docker push --all-tags ghcr.io/tmlamb/probable-pitchers-ingest

  deploy-infra:
    name: Update Infrastructure
    needs: build-images
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS_PROD }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Get GKR Credentials"
        uses: "google-github-actions/get-gke-credentials@v1"
        with:
          cluster_name: "probable-pitchers"
          location: "us-central1"

      - name: "Install dependencies"
        run: cd infrastructure && npm ci

      - name: "Update test stack"
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: test
          work-dir: infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          DEPLOY_COMMIT_TAG: sha-${{ github.sha }}

  update-preview:
    name: Update Preview Mobile App
    needs: deploy-infra
    runs-on: ubuntu-latest
    if: ${{ needs.checks.outputs.changed-expo }}

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Publish update
        run: cd apps/expo && APP_ENV=preview NEXTAUTH_URL="https://dev.probablepitcher.com" SENTRY_PUBLIC_DSN="${{ secrets.SENTRY_PUBLIC_DSN }}" eas update --branch preview --message "${{ github.event.head_commit.message }}"

      # - name: App Store Build
      #   run: cd apps/expo && eas build --profile preview --platform all --non-interactive
